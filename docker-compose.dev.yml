services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dialist-postgres
    environment:
      POSTGRES_DB: dialist
      POSTGRES_USER: dialist_user
      POSTGRES_PASSWORD: dialist_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - dialist-network
    restart: unless-stopped

  # Laravel API Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: dialist-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=dialist
      - DB_USERNAME=dialist_user
      - DB_PASSWORD=dialist_password
    depends_on:
      - postgres
    networks:
      - dialist-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dialist-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME}
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - dialist-network
    restart: unless-stopped

  # Redis для кэширования и сессий
  redis:
    image: redis:7-alpine
    container_name: dialist-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dialist-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: dialist-nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - dialist-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_vendor:
  frontend_node_modules:

networks:
  dialist-network:
    driver: bridge