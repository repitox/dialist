name: Deploy to Server

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—É—à–µ –≤ main –≤–µ—Ç–∫—É
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    - name: Checkout code
      uses: actions/checkout@v4
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è —Å–±–æ—Ä–∫–∏)
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å package.json –∏ package-lock.json)
    - name: Install dependencies
      run: |
        if [ -f package.json ] && [ -f package-lock.json ]; then
          echo "Installing dependencies with npm ci..."
          npm ci
        elif [ -f package.json ]; then
          echo "Installing dependencies with npm install..."
          npm install
        else
          echo "No package.json found, skipping npm install"
        fi
    
    # –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
    - name: Build project
      run: |
        if [ -f package.json ]; then
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–∫—Ä–∏–ø—Ç build
          if npm run build --if-present 2>/dev/null; then
            echo "‚úÖ Build completed successfully"
          else
            echo "‚ÑπÔ∏è No build script found, using source files"
          fi
        else
          echo "‚ÑπÔ∏è No package.json found, using source files as-is"
        fi
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –¥–µ–ø–ª–æ—è
    - name: Prepare deployment files
      run: |
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥–µ–ø–ª–æ—è
        mkdir -p deploy
        
        # –ö–æ–ø–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
        cp index.html deploy/
        cp styles.css deploy/
        cp script.js deploy/
        cp README.md deploy/
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞–ø–∫–∞ build, –∫–æ–ø–∏—Ä—É–µ–º –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        if [ -d "build" ]; then
          cp -r build/* deploy/
        fi
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞–ø–∫–∞ dist, –∫–æ–ø–∏—Ä—É–µ–º –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ  
        if [ -d "dist" ]; then
          cp -r dist/* deploy/
        fi
        
        echo "Files prepared for deployment:"
        ls -la deploy/
    
    # –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ SSH
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É —Å–∞–π—Ç–∞
          cd ${{ secrets.SERVER_PATH }}
          
          # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
          if [ -d "current" ]; then
            rm -rf backup
            mv current backup
            echo "Backup created"
          fi
          
          # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
          mkdir -p current
          
          echo "Deployment directory prepared"
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        source: "deploy/*"
        target: ${{ secrets.SERVER_PATH }}/current/
        strip_components: 1
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    - name: Finalize deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd ${{ secrets.SERVER_PATH }}/current
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
          chmod -R 644 *
          find . -type d -exec chmod 755 {} \;
          
          # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
          # sudo systemctl reload nginx
          # sudo systemctl reload apache2
          
          echo "‚úÖ Deployment completed successfully!"
          echo "üìÅ Files deployed to: ${{ secrets.SERVER_PATH }}/current"
          echo "üåê Site should be available at your domain"
          
          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
          echo "üìã Deployed files:"
          ls -la
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–µ–ø–ª–æ–µ
    - name: Deployment notification
      if: success()
      run: |
        echo "üéâ Deployment successful!"
        echo "‚úÖ Dialist has been deployed to the server"
        echo "üîó Check your website to see the changes"
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    - name: Deployment failed notification
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "üîç Check the logs above for details"